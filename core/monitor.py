"""
–û—Å–Ω–æ–≤–Ω–æ–π –∫–ª–∞—Å—Å –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –º–∞–≥–∞–∑–∏–Ω–æ–≤ Etsy
"""
import time
from typing import List, Dict
from config.settings import config
from parsers.etsy_parser import EtsyParser
from services.data_service import DataService
from models.product import Product

class EtsyMonitor:
    """–û—Å–Ω–æ–≤–Ω–æ–π –∫–ª–∞—Å—Å –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –º–∞–≥–∞–∑–∏–Ω–æ–≤ Etsy"""
    
    def __init__(self):
        self.config = config
        self.parser = EtsyParser(config)
        self.data_service = DataService(config)
    
    def parse_single_shop(self, shop_url: str, compare_with_previous: bool = True) -> str:
        """–ü–∞—Ä—Å–∏—Ç –æ–¥–∏–Ω –º–∞–≥–∞–∑–∏–Ω –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç"""
        shop_name = self.parser.get_shop_name_from_url(shop_url)
        products = self.parser.parse_shop_page(shop_url)
        
        if not products:
            print(f"–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –¥–ª—è –º–∞–≥–∞–∑–∏–Ω–∞ {shop_name}")
            return None
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ
        filename = self.data_service.save_products_to_excel(products, shop_name)
        
        # –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º —Å –ø—Ä–µ–¥—ã–¥—É—â–∏–º–∏ –¥–∞–Ω–Ω—ã–º–∏ –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
        if compare_with_previous:
            comparison = self.data_service.compare_shop_data(products, shop_name)
            if comparison:
                self.data_service.print_comparison_results(comparison)
                
                # –ó–¥–µ—Å—å –≤ –±—É–¥—É—â–µ–º –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –≤ Telegram
                if comparison.has_changes:
                    print(f"üîî –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –º–∞–≥–∞–∑–∏–Ω–µ {shop_name}!")
        
        return filename
    
    def parse_all_shops(self, compare_with_previous: bool = True) -> Dict[str, List[Product]]:
        """–ü–∞—Ä—Å–∏—Ç –≤—Å–µ –º–∞–≥–∞–∑–∏–Ω—ã –∏–∑ —Ñ–∞–π–ª–∞ links.txt —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π 403 –æ—à–∏–±–æ–∫"""
        urls = self.data_service.load_shop_urls()
        
        if not urls:
            print("–ù–µ—Ç URL –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞")
            return {}
        
        all_shop_products = {}
        i = 0
        
        while i < len(urls):
            url = urls[i]
            shop_name = self.parser.get_shop_name_from_url(url)
            print(f"\n--- –ü–∞—Ä—Å–∏–Ω–≥ –º–∞–≥–∞–∑–∏–Ω–∞ {i+1}/{len(urls)}: {shop_name} ({url}) ---")
            
            try:
                products = self.parser.parse_shop_page(url)
                
                if products:
                    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ Excel
                    excel_file = self.data_service.save_products_to_excel(products, shop_name)
                    
                    # –î–æ–±–∞–≤–ª—è–µ–º –≤ –æ–±—â–∏–π —Å–ª–æ–≤–∞—Ä—å
                    all_shop_products[shop_name] = products
                    
                    print(f"‚úÖ –ú–∞–≥–∞–∑–∏–Ω {shop_name} —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω ({len(products)} —Ç–æ–≤–∞—Ä–æ–≤)")
                    
                    # –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º —Å –ø—Ä–µ–¥—ã–¥—É—â–∏–º–∏ –¥–∞–Ω–Ω—ã–º–∏ –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
                    if compare_with_previous:
                        comparison = self.data_service.compare_shop_data(products, shop_name)
                        if comparison:
                            self.data_service.print_comparison_results(comparison)
                            
                            if comparison.has_changes:
                                print(f"üîî –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –º–∞–≥–∞–∑–∏–Ω–µ {shop_name}!")
                    
                    # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É –º–∞–≥–∞–∑–∏–Ω—É
                    i += 1
                    
                    # –ü–∞—É–∑–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏
                    if i < len(urls):
                        print(f"–ü–∞—É–∑–∞ {self.config.etsy.request_delay} —Å–µ–∫...")
                        time.sleep(self.config.etsy.request_delay)
                else:
                    print(f"‚ö†Ô∏è –ú–∞–≥–∞–∑–∏–Ω {shop_name} –Ω–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å, –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É")
                    i += 1
                    
            except Exception as e:
                print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥–µ {url}: {e}")
                print("üîÑ –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É –º–∞–≥–∞–∑–∏–Ω—É")
                i += 1
                continue
        
        return all_shop_products
    
    def run_monitoring_cycle(self):
        """–ó–∞–ø—É—Å–∫–∞–µ—Ç –æ–¥–∏–Ω —Ü–∏–∫–ª –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –¥–ª—è –±–æ—Ç–∞"""
        from models.product import ShopComparison
        
        print("üöÄ –ó–∞–ø—É—Å–∫ —Ü–∏–∫–ª–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ Etsy –º–∞–≥–∞–∑–∏–Ω–æ–≤")
        print(f"–í—Ä–µ–º—è: {time.strftime('%Y-%m-%d %H:%M:%S')}")
        
        # –°–æ–∑–¥–∞—ë–º –ø–∞–ø–∫—É –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ —Å–µ–∞–Ω—Å–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞
        parsing_dir = self.data_service.start_parsing_session()
        
        # –ü–∞—Ä—Å–∏–º –≤—Å–µ –º–∞–≥–∞–∑–∏–Ω—ã
        all_shop_products = self.parse_all_shops(compare_with_previous=True)
        
        if not all_shop_products:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –Ω–∏ –æ—Ç –æ–¥–Ω–æ–≥–æ –º–∞–≥–∞–∑–∏–Ω–∞")
            return []
        
        print(f"\n=== –°–û–•–†–ê–ù–ï–ù–ò–ï –†–ï–ó–£–õ–¨–¢–ê–¢–û–í ===")
        
        # –°–Ω–∞—á–∞–ª–∞ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –±–∞–∑–æ–≤—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤ JSON
        results_file = self.data_service.save_results_to_json(all_shop_products)
        
        # –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º —Å –ø—Ä–µ–¥—ã–¥—É—â–∏–º–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ –∏ –Ω–∞—Ö–æ–¥–∏–º –Ω–æ–≤—ã–µ —Ç–æ–≤–∞—Ä—ã
        print("\n=== –°–†–ê–í–ù–ï–ù–ò–ï –° –ü–†–ï–î–´–î–£–©–ò–ú–ò –†–ï–ó–£–õ–¨–¢–ê–¢–ê–ú–ò ===")
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
        current_results = {}
        for shop_name, products in all_shop_products.items():
            current_results[shop_name] = {product.listing_id: product.url for product in products}
        
        # –ù–∞—Ö–æ–¥–∏–º –Ω–æ–≤—ã–µ —Ç–æ–≤–∞—Ä—ã
        new_products_dict = self.data_service.compare_all_shops_results(current_results)
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å –Ω–æ–≤—ã–º–∏ —Ç–æ–≤–∞—Ä–∞–º–∏
        final_results_file = self.data_service.save_results_with_new_products(all_shop_products, new_products_dict)
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –¥–ª—è –±–æ—Ç–∞
        comparison_results = []
        
        for shop_name, products in all_shop_products.items():
            # –ù–∞—Ö–æ–¥–∏–º –Ω–æ–≤—ã–µ —Ç–æ–≤–∞—Ä—ã –¥–ª—è —ç—Ç–æ–≥–æ –º–∞–≥–∞–∑–∏–Ω–∞
            new_products_for_shop = []
            for product in products:
                if product.listing_id in new_products_dict:
                    new_products_for_shop.append(product)
            
            # –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
            comparison = ShopComparison(
                shop_name=shop_name,
                new_products=new_products_for_shop,
                removed_products=[],  # –ü–æ–∫–∞ –Ω–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º —É–¥–∞–ª–µ–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã
                total_current=len(products),
                total_previous=len(products) - len(new_products_for_shop),
                comparison_date=None  # –ë—É–¥–µ—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
            )
            
            comparison_results.append(comparison)
        
        print(f"\n=== –ò–¢–û–ì–ò –¶–ò–ö–õ–ê ===")
        print(f"–£—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ –º–∞–≥–∞–∑–∏–Ω–æ–≤: {len(all_shop_products)}")
        print(f"–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–æ–≤: {sum(len(products) for products in all_shop_products.values())}")
        print(f"–ù–∞–π–¥–µ–Ω–æ –Ω–æ–≤—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤: {len(new_products_dict)}")
        
        if all_shop_products:
            print("–û–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ –º–∞–≥–∞–∑–∏–Ω—ã:")
            for shop_name, products in all_shop_products.items():
                print(f"  - {shop_name}: {len(products)} —Ç–æ–≤–∞—Ä–æ–≤")
        
        if new_products_dict:
            print(f"\n–ù–æ–≤—ã–µ —Ç–æ–≤–∞—Ä—ã ({len(new_products_dict)}):")
            for listing_id, url in list(new_products_dict.items())[:5]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 5
                print(f"  - {listing_id}: {url}")
            if len(new_products_dict) > 5:
                print(f"  ... –∏ –µ—â–µ {len(new_products_dict) - 5} —Ç–æ–≤–∞—Ä–æ–≤")
        
        # –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â—É—é –ø–∞–ø–∫—É –ø–∞—Ä—Å–∏–Ω–≥–∞ –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
        print(f"\n=== –û–ß–ò–°–¢–ö–ê –°–¢–ê–†–´–• –î–ê–ù–ù–´–• ===")
        print("–û–∂–∏–¥–∞–Ω–∏–µ 3 —Å–µ–∫—É–Ω–¥—ã –ø–µ—Ä–µ–¥ —É–¥–∞–ª–µ–Ω–∏–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö —Ñ–∞–π–ª–æ–≤...")
        time.sleep(3)
        
        if self.data_service.delete_previous_parsing_folder():
            print("‚úÖ –ü—Ä–µ–¥—ã–¥—É—â–∞—è –ø–∞–ø–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ —É–¥–∞–ª–µ–Ω–∞")
        else:
            print("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –ø—Ä–µ–¥—ã–¥—É—â—É—é –ø–∞–ø–∫—É –∏–ª–∏ –æ–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
        
        print("‚úÖ –¶–∏–∫–ª –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –∑–∞–≤–µ—Ä—à–µ–Ω")
        return comparison_results