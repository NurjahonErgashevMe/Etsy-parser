"""
–ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç –ª–æ–≥–∏–∫–∏ —Ç–æ–ø-—Ö–∏—Ç–æ–≤ —Å –∏–º–∏—Ç–∞—Ü–∏–µ–π –¥–∞–Ω–Ω—ã—Ö
"""
import json
import os
from datetime import datetime, timedelta

def quick_test_tops():
    """–ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç —Å –∏–º–∏—Ç–∞—Ü–∏–µ–π –¥–∞–Ω–Ω—ã—Ö"""
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –ø—Ä—è–º–æ –≤ –∫–æ–¥–µ
    test_listing_id = "4380396448"  # –ë–µ—Ä–µ–º —Ä–µ–∞–ª—å–Ω—ã–π ID –∏–∑ —Ñ–∞–π–ª–∞
    
    # –ò–º–∏—Ç–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ "–≤—á–µ—Ä–∞" –∏ "—Å–µ–≥–æ–¥–Ω—è"
    yesterday = (datetime.now() - timedelta(days=1)).strftime("%d.%m.%Y_%H.%M")
    today = datetime.now().strftime("%d.%m.%Y_%H.%M")
    
    # –°–æ–∑–¥–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Å –ø—Ä–æ–≥—Ä–µ—Å—Å–∏–µ–π –¥–ª—è —Ç–æ–ø–∞
    test_data = {
        "listings": {
            test_listing_id: {
                yesterday: {
                    "price": "749.00",
                    "est_total_sales": 0,
                    "est_mo_sales": 0,
                    "listing_age_in_months": 1,
                    "est_reviews": 0,
                    "est_reviews_in_months": 0,
                    "conversion_rate": 0.0,
                    "views": 3,  # –ù–∞—á–∞–ª—å–Ω—ã–µ –ø—Ä–æ—Å–º–æ—Ç—Ä—ã
                    "num_favorers": 1,  # –ù–∞—á–∞–ª—å–Ω—ã–µ –ª–∞–π–∫–∏
                    "url": "https://www.etsy.com/listing/4380396448/ivory-wedding-dress-with-high-collar-a"
                },
                today: {
                    "price": "749.00",
                    "est_total_sales": 5,
                    "est_mo_sales": 5,
                    "listing_age_in_months": 1,
                    "est_reviews": 2,
                    "est_reviews_in_months": 2,
                    "conversion_rate": 0.08,
                    "views": 53,  # +50 –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤ –∑–∞ –¥–µ–Ω—å = 50/–¥–µ–Ω—å (–±–æ–ª—å—à–µ 20)
                    "num_favorers": 6,  # +5 –ª–∞–π–∫–æ–≤ –∑–∞ –¥–µ–Ω—å = 5/–¥–µ–Ω—å (–±–æ–ª—å—à–µ 0.8)
                    "url": "https://www.etsy.com/listing/4380396448/ivory-wedding-dress-with-high-collar-a"
                }
            }
        }
    }
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤–æ –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
    test_file = "output/tops/test_perspective_listings.json"
    os.makedirs("output/tops", exist_ok=True)
    
    with open(test_file, 'w', encoding='utf-8') as f:
        json.dump(test_data, f, ensure_ascii=False, indent=2)
    
    print(f"‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —Å–æ–∑–¥–∞–Ω—ã: {test_file}")
    print(f"üìä –õ–∏—Å—Ç–∏–Ω–≥ {test_listing_id}:")
    print(f"   –í—á–µ—Ä–∞: {test_data['listings'][test_listing_id][yesterday]['views']} –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤, {test_data['listings'][test_listing_id][yesterday]['num_favorers']} –ª–∞–π–∫–æ–≤")
    print(f"   –°–µ–≥–æ–¥–Ω—è: {test_data['listings'][test_listing_id][today]['views']} –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤, {test_data['listings'][test_listing_id][today]['num_favorers']} –ª–∞–π–∫–æ–≤")
    print(f"   –ü—Ä–∏—Ä–æ—Å—Ç: +{test_data['listings'][test_listing_id][today]['views'] - test_data['listings'][test_listing_id][yesterday]['views']} –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤/–¥–µ–Ω—å, +{test_data['listings'][test_listing_id][today]['num_favorers'] - test_data['listings'][test_listing_id][yesterday]['num_favorers']} –ª–∞–π–∫–æ–≤/–¥–µ–Ω—å")
    
    # –¢–µ–ø–µ—Ä—å —Ç–µ—Å—Ç–∏—Ä—É–µ–º –ª–æ–≥–∏–∫—É
    from services.tops_service import TopsService
    
    # –í—Ä–µ–º–µ–Ω–Ω–æ –ø–æ–¥–º–µ–Ω—è–µ–º —Ñ–∞–π–ª
    tops_service = TopsService()
    original_file = tops_service.listings_file
    tops_service.listings_file = test_file
    
    print(f"\nüîç –ó–∞–ø—É—Å–∫ –æ—Ü–µ–Ω–∫–∏ —Ç–æ–ø-—Ö–∏—Ç–æ–≤...")
    result = tops_service.evaluate_matured_listings()
    
    print(f"\nüìà –†–ï–ó–£–õ–¨–¢–ê–¢–´:")
    print(f"üîù –¢–æ–ø-—Ö–∏—Ç–æ–≤ –Ω–∞–π–¥–µ–Ω–æ: {len(result.get('top', {}))}")
    print(f"üóÑÔ∏è –í –∞—Ä—Ö–∏–≤ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: {len(result.get('archived', []))}")
    
    if result.get('top'):
        print(f"\nüéâ –ù–ê–ô–î–ï–ù –¢–û–ü-–•–ò–¢!")
        for listing_id, data in result['top'].items():
            print(f"   ID: {listing_id}")
            print(f"   –ü—Ä–æ—Å–º–æ—Ç—Ä–æ–≤/–¥–µ–Ω—å: {data['avg_views_per_day']}")
            print(f"   –õ–∞–π–∫–æ–≤/–¥–µ–Ω—å: {data['avg_likes_per_day']}")
            print(f"   URL: {data['url']}")
    else:
        print(f"‚ùå –¢–æ–ø-—Ö–∏—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
    
    # –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª
    if os.path.exists(test_file):
        os.remove(test_file)
        print(f"\nüßπ –¢–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª —É–¥–∞–ª–µ–Ω")

if __name__ == "__main__":
    quick_test_tops()