"""
–ì–ª–∞–≤–Ω–æ–µ –æ–∫–Ω–æ GUI –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –¥–ª—è Etsy Parser
"""
import tkinter as tk
from tkinter import ttk, messagebox
import threading
import logging
import sys
import os

from .tabs import ConfigTab, ControlTab, LogsTab

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å
sys.path.insert(0, os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

from core.monitor import EtsyMonitor
from config.settings import config

logger = logging.getLogger(__name__)

class MainWindow:
    """–ì–ª–∞–≤–Ω–æ–µ –æ–∫–Ω–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –¥–ª—è Etsy Parser"""
    
    def __init__(self):
        self.root = None
        self.notebook = None
        
        # –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
        self.etsy_monitor = EtsyMonitor()
        self.telegram_bot = None
        self.bot_thread = None
        
        # –í–∫–ª–∞–¥–∫–∏
        self.config_tab = None
        self.control_tab = None
        self.logs_tab = None
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å –∑–∞–ø—É—Å–∫–∞
        try:
            from utils.config_loader import config_loader
            config_loader.set_working_status("start")
            logger.info("–°—Ç–∞—Ç—É—Å –ø–∞—Ä—Å–µ—Ä–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ 'start'")
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–ø—É—Å–∫–∞: {e}")
        
        logger.info("Etsy Parser GUI –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
    
    def run(self):
        """–ó–∞–ø—É—Å–∫ GUI"""
        try:
            self.root = tk.Tk()
            self.root.title("üõçÔ∏è Etsy Parser & Bot Manager v1.0")
            self.root.geometry("1000x750")
            self.root.minsize(900, 650)
            
            # –¶–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–∫–Ω–∞
            self.root.eval('tk::PlaceWindow . center')
            
            # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–∫—Ä—ã—Ç–∏—è –æ–∫–Ω–∞
            self.root.protocol("WM_DELETE_WINDOW", self._on_closing)
            
            self._create_widgets()
            self._start_status_updater()
            
            logger.info("Etsy Parser GUI –∑–∞–ø—É—â–µ–Ω")
            self.root.mainloop()
            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ GUI: {e}")
            messagebox.showerror("–û—à–∏–±–∫–∞", f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ GUI: {e}")
    
    def _create_widgets(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ –≤–∏–¥–∂–µ—Ç–æ–≤"""
        # –°–æ–∑–¥–∞–µ–º notebook –¥–ª—è –≤–∫–ª–∞–¥–æ–∫
        self.notebook = ttk.Notebook(self.root)
        self.notebook.pack(fill=tk.BOTH, expand=True, padx=10, pady=10)
        
        # –°–æ–∑–¥–∞–µ–º –≤–∫–ª–∞–¥–∫–∏
        self.config_tab = ConfigTab(self.notebook, self)
        self.control_tab = ControlTab(self.notebook, self)
        self.logs_tab = LogsTab(self.notebook, self)
        
        # –î–æ–±–∞–≤–ª—è–µ–º –≤–∫–ª–∞–¥–∫–∏ –≤ notebook
        self.notebook.add(self.config_tab.get_frame(), text="‚öôÔ∏è –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è")
        self.notebook.add(self.control_tab.get_frame(), text="ü§ñ Telegram –ë–æ—Ç")
        self.notebook.add(self.logs_tab.get_frame(), text="üìù –õ–æ–≥–∏")
        
        # –°—Ç–∞—Ç—É—Å–Ω–∞—è —Å—Ç—Ä–æ–∫–∞
        self.status_var = tk.StringVar(value="–ì–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ")
        status_bar = ttk.Label(self.root, textvariable=self.status_var, 
                              relief=tk.SUNKEN, anchor=tk.W)
        status_bar.pack(side=tk.BOTTOM, fill=tk.X, padx=10, pady=(0, 10))
    

    

    

    

    
    def _start_status_updater(self):
        """–ó–∞–ø—É—Å–∫ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞"""
        def update_status():
            try:
                # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –≤ –≤–∫–ª–∞–¥–∫–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
                if self.control_tab:
                    self.control_tab.update_status()
                
                # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å–Ω—É—é —Å—Ç—Ä–æ–∫—É
                if (self.telegram_bot and 
                    self.telegram_bot.is_running() and 
                    self.bot_thread and 
                    self.bot_thread.is_alive()):
                    self.status_var.set("ü§ñ Telegram –±–æ—Ç –∞–∫—Ç–∏–≤–µ–Ω")
                else:
                    self.status_var.set("‚úÖ –ì–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ")
                
            except Exception as e:
                logger.debug(f"–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞: {e}")
            
            # –ü–ª–∞–Ω–∏—Ä—É–µ–º —Å–ª–µ–¥—É—é—â–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
            if self.root:
                self.root.after(3000, update_status)
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –ø–µ—Ä–≤–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
        self.root.after(1000, update_status)
    
    def get_config_data(self):
        """–ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∏–∑ –≤–∫–ª–∞–¥–∫–∏"""
        if self.config_tab:
            # –°–æ–±–∏—Ä–∞–µ–º –≤—Å–µ User ID –∏–∑ –º–∞—Å—Å–∏–≤–∞
            user_ids = []
            for var in self.config_tab.user_id_vars:
                user_id = var.get().strip()
                if user_id:  # –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –Ω–µ–ø—É—Å—Ç—ã–µ ID
                    user_ids.append(user_id)
            
            return {
                'bot_token': self.config_tab.bot_token_var.get().strip(),
                'user_ids': user_ids,  # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –º–∞—Å—Å–∏–≤ ID
                'user_id': user_ids[0] if user_ids else ''  # –î–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
            }
        return {}
    
    
    
    def _on_closing(self):
        try:
            logger.info("–ó–∞–∫—Ä—ã—Ç–∏–µ Etsy Parser...")

            # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤ config.txt
            try:
                from utils.config_loader import config_loader
                config_loader.set_working_status("stop")
                logger.info("–°—Ç–∞—Ç—É—Å –ø–∞—Ä—Å–µ—Ä–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ 'stop'")
            except Exception as e:
                logger.error(f"–û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏: {e}")

            # –ó–∞–∫—Ä—ã–≤–∞–µ–º –æ–∫–Ω–æ —Å—Ä–∞–∑—É
            self.root.destroy()
            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è: {e}")
            self.root.destroy()