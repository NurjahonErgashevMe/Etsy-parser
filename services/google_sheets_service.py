import gspread
from google.auth.exceptions import GoogleAuthError
from datetime import datetime
from typing import List, Dict, Optional
from utils.shop_helpers import get_shop_name_for_product, extract_shop_names_from_results

class GoogleSheetsService:
    
    def __init__(self, config):
        self.config = config
        self.credentials_file = config.google_sheets_credentials or "credentials.json"
        self.client = None
        self.enabled = self._initialize_client()
    
    def _initialize_client(self) -> bool:
        try:
            self.client = gspread.service_account(filename=self.credentials_file)
            print(f"‚úÖ Google Sheets –∫–ª–∏–µ–Ω—Ç —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
            return True
        except FileNotFoundError:
            print(f"‚ùå –§–∞–π–ª credentials –Ω–µ –Ω–∞–π–¥–µ–Ω: {self.credentials_file}")
            return False
        except GoogleAuthError as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ Google: {e}")
            return False
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Google Sheets: {e}")
            return False
    
    def load_shop_urls_from_sheets(self, spreadsheet_id: str, sheet_name: str = "Etsy Shops") -> List[str]:
        if not self.enabled:
            print("‚ö†Ô∏è Google Sheets –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–π —Ñ–∞–π–ª")
            return []
        
        try:
            print(f"üìä –ó–∞–≥—Ä—É–∑–∫–∞ URL –º–∞–≥–∞–∑–∏–Ω–æ–≤ –∏–∑ –ª–∏—Å—Ç–∞ '{sheet_name}'...")
            
            spreadsheet = self.client.open_by_key(spreadsheet_id)
            worksheet = spreadsheet.worksheet(sheet_name)
            values = worksheet.col_values(1)
            
            urls = []
            for value in values[1:]:
                if value and value.strip() and value.startswith('http'):
                    urls.append(value.strip())
            
            print(f"‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ {len(urls)} URL –º–∞–≥–∞–∑–∏–Ω–æ–≤ –∏–∑ Google Sheets")
            return urls
            
        except gspread.WorksheetNotFound:
            print(f"‚ùå –õ–∏—Å—Ç '{sheet_name}' –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Ç–∞–±–ª–∏—Ü–µ")
            return []
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ URL –∏–∑ Google Sheets: {e}")
            return []
    
    def add_new_products_to_sheets(self, spreadsheet_id: str, new_products: Dict[str, str], sheet_name: str = "Etsy Products", results: Dict = None):
        if not self.enabled:
            print("‚ö†Ô∏è Google Sheets –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ")
            return
        
        if not new_products:
            print("üìä –ù–µ—Ç –Ω–æ–≤—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ Google Sheets")
            return
        
        try:
            print(f"üìä –î–æ–±–∞–≤–ª–µ–Ω–∏–µ {len(new_products)} –Ω–æ–≤—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤ –≤ –ª–∏—Å—Ç '{sheet_name}'...")
            
            spreadsheet = self.client.open_by_key(spreadsheet_id)
            
            try:
                worksheet = spreadsheet.worksheet(sheet_name)
            except gspread.WorksheetNotFound:
                print(f"üìä –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ª–∏—Å—Ç–∞ '{sheet_name}'...")
                worksheet = spreadsheet.add_worksheet(title=sheet_name, rows=1000, cols=3)
                worksheet.update('A1:C1', [['–°—Å—ã–ª–∫–∏ –Ω–∞ —Ç–æ–≤–∞—Ä—ã', '–í—Ä–µ–º—è –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏—è', '–ù–∞–∑–≤–∞–Ω–∏–µ –º–∞–≥–∞–∑–∏–Ω–∞']])
            
            current_time = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
            
            rows_to_add = []
            for listing_id, url in new_products.items():
                shop_name = get_shop_name_for_product(listing_id, url, results)
                rows_to_add.append([url, current_time, shop_name])
            
            existing_data = worksheet.get_all_values()[1:]  
            all_data = rows_to_add + existing_data
            
            if all_data:
                worksheet.batch_clear([f'A2:C{len(existing_data) + len(rows_to_add) + 1}'])
                range_name = f'A2:C{len(all_data) + 1}'
                worksheet.update(range_name, all_data)
                
                print(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ {len(rows_to_add)} –Ω–æ–≤—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤ –≤ Google Sheets (—Å–≤–µ—Ä—Ö—É)")
                print(f"üìä –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π: {len(all_data)}")
                
                added_shops = set(row[2] for row in rows_to_add)
                print(f"üìä –î–æ–±–∞–≤–ª–µ–Ω—ã —Ç–æ–≤–∞—Ä—ã –∏–∑ –º–∞–≥–∞–∑–∏–Ω–æ–≤: {', '.join(added_shops)}")
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Ç–æ–≤–∞—Ä–æ–≤ –≤ Google Sheets: {e}")
    
    def test_connection(self, spreadsheet_id: str) -> bool:
        if not self.enabled:
            return False
        
        try:
            spreadsheet = self.client.open_by_key(spreadsheet_id)
            print(f"‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Ç–∞–±–ª–∏—Ü–µ '{spreadsheet.title}' —É—Å–ø–µ—à–Ω–æ")
            
            worksheets = spreadsheet.worksheets()
            print(f"üìä –î–æ—Å—Ç—É–ø–Ω—ã–µ –ª–∏—Å—Ç—ã: {[ws.title for ws in worksheets]}")
            
            return True
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Google Sheets: {e}")
            return False